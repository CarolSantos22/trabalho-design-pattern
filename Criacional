interface Motor {
    String getMotor();
}

interface Rodas {
    String getRodas();
}

interface Assento {
    String getAssento();
}
class MotorEsportivo implements Motor {
    public String getMotor() {
        return "BMW k 1600 B";
    }
}

class MotorLuxo implements Motor {
    public String getMotor() {
        return "MV Agusta Rush 1000";
    }
}

class RodasEsportivas implements Rodas {
    public String getRodas() {
        return "Rodas de ferro fundido";
    }
}

class RodasLuxo implements Rodas {
    public String getRodas() {
        return "Rodas aço inoxidável";
    }
}

class AssentoEsportivo implements Assento {
    public String getAssento() {
        return "Assentos de couro sintético ";
    }
}

class AssentoLuxo implements Assento {
    public String getAssento() {
        return "Assentos de couro premium";
    }
}
interface CarroFactory {
    Motor criarMotor();
    Rodas criarRodas();
    Assento criarAssento();
}
class CarroEsportivoFactory implements CarroFactory {
    public Motor criarMotor() {
        return new MotorEsportivo();
    }

    public Rodas criarRodas() {
        return new RodasEsportivas();
    }

    public Assento criarAssento() {
        return new AssentoEsportivo();
    }
}

class CarroLuxoFactory implements CarroFactory {
    public Motor criarMotor() {
        return new MotorLuxo();
    }

    public Rodas criarRodas() {
        return new RodasLuxo();
    }

    public Assento criarAssento() {
        return new AssentoLuxo();
    }
}
class Carro {
    private Motor motor;
    private Rodas rodas;
    private Assento assento;

    public Carro(Motor motor, Rodas rodas, Assento assento) {
        this.motor = motor;
        this.rodas = rodas;
        this.assento = assento;
    }

    @Override
    public String toString() {
        return "Carro [Motor=" + motor.getMotor() + ", Rodas=" + rodas.getRodas() + ", Assento=" + assento.getAssento() + "]";
    }
}
public class Main {
    public static void main(String[] args) {
        CarroFactory carroEsportivoFactory = new CarroEsportivoFactory();

        Motor motorEsportivo = carroEsportivoFactory.criarMotor();
        Rodas rodasEsportivas = carroEsportivoFactory.criarRodas();
        Assento assentoEsportivo = carroEsportivoFactory.criarAssento();

        Carro carroEsportivo = new Carro(motorEsportivo, rodasEsportivas, assentoEsportivo);
        System.out.println("Carro Esportivo: " + carroEsportivo);

        CarroFactory carroLuxoFactory = new CarroLuxoFactory();

        Motor motorLuxo = carroLuxoFactory.criarMotor();
        Rodas rodasLuxo = carroLuxoFactory.criarRodas();
        Assento assentoLuxo = carroLuxoFactory.criarAssento();

        Carro carroLuxo = new Carro(motorLuxo, rodasLuxo, assentoLuxo);
        System.out.println("Carro de Luxo: " + carroLuxo);}
}
